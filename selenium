from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time

# Setup WebDriver
options = webdriver.ChromeOptions()
options.add_argument("--start-maximized")  # Open browser in full screen
options.add_argument("--headless")  # Run in headless mode (optional)
options.add_argument("--disable-blink-features=AutomationControlled")  # Avoid detection

driver = webdriver.Chrome(ChromeDriverManager().install(), options=options)

try:
    # Navigate to LinkedIn Jobs page
    driver.get("https://www.linkedin.com/jobs")

    # Wait for search box to load
    search_box = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.CSS_SELECTOR, "input.jobs-search-box__text-input"))
    )

    # Enter job title and search
    search_box.send_keys("Python Developer")  # Change job title if needed
    search_box.send_keys(Keys.RETURN)

    # Wait for results to load
    time.sleep(5)

    # Extract job details
    jobs = []
    job_cards = driver.find_elements(By.CSS_SELECTOR, "div.job-card-container")

    for job in job_cards[:10]:  # Limit to first 10 results
        try:
            title = job.find_element(By.CSS_SELECTOR, "h3").text
            company = job.find_element(By.CSS_SELECTOR, "h4").text
            location = job.find_element(By.CSS_SELECTOR, "span.job-search-card__location").text
            jobs.append({"title": title, "company": company, "location": location})
        except Exception as e:
            print(f"Error extracting job info: {e}")

    # Print job details
    for job in jobs:
        print(f"Title: {job['title']}, Company: {job['company']}, Location: {job['location']}")

except Exception as e:
    print(f"An error occurred: {e}")

finally:
    driver.quit()  # Close browser
